---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: varnish-cache-invalidator
  namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: varnish-cache-invalidator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: varnish-cache-invalidator
    namespace: default

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: varnish-cache-invalidator
  name: varnish-cache-invalidator
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: varnish-cache-invalidator
      deployment: varnish-cache-invalidator
  template:
    metadata:
      labels:
        app: varnish-cache-invalidator
        deployment: varnish-cache-invalidator
    spec:
      serviceAccountName: varnish-cache-invalidator
      containers:
        - env:
            - name: VARNISH_NAMESPACE
              value: default
            - name: IN_CLUSTER
              value: 'true'
            - name: PURGE_DOMAIN
              value: gateway.example.com
            - name: TICKER_INTERVAL_SECONDS
              value: '30'
          image: 'docker.io/bilalcaliskan/varnish-cache-invalidator:latest'
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 10
          name: varnish
          ports:
            - containerPort: 3000
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: varnish-cache-invalidator
  name: varnish-cache-invalidator
spec:
  ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: varnish-cache-invalidator
    deployment: varnish-cache-invalidator
  sessionAffinity: None
  type: NodePort
